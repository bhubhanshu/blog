{"version":3,"sources":["components/HeaderComponent.js","components/FooterComponent.js","components/AboutComponent.js","components/ContactComponent.js","components/AdminComponent.js","components/LoadingComponent.js","components/HomeComponent.js","components/BlogComponent.js","firebase/firebase.js","firebase/config.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/comments.js","redux/blogs.js","redux/auth.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Header","props","state","isNavOpen","toggleNav","bind","handleLogout","this","setState","logoutUser","Navbar","dark","expand","className","NavbarBrand","href","src","process","height","width","alt","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","NavItem","to","auth","isAuthenticated","Button","outline","isFetching","Component","Footer","About","Breadcrumb","BreadcrumbItem","active","Card","CardHeader","CardBody","Progress","animated","color","value","required","val","length","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","values","console","log","JSON","stringify","postFeedback","resetFeedbackForm","role","model","onSubmit","Row","Label","htmlFor","md","Col","text","id","name","placeholder","validators","show","messages","textarea","rows","size","offset","type","Admin","handleLogin","event","loginUser","username","password","preventDefault","errMess","Form","FormGroup","Input","innerRef","input","Loading","RenderBlog","mouseEnter","isMouseInside","mouseLeave","blog","_id","onMouseEnter","onMouseLeave","title","author","Intl","DateTimeFormat","year","month","day","format","Date","createdAt","content","BlogForm","toggleModal","isModalOpen","postBlog","then","window","location","reload","Modal","toggle","ModalHeader","ModalBody","BlogList","showScroll","addEventListener","pageYOffset","sorted","blogs","slice","sort","a","b","reverse","map","in","key","isLoading","scrollTo","top","behavior","style","display","RenderComments","comments","postComment","blogId","comment","EditForm","editBlog","defaultValue","CommentForm","BlogDetail","handleDelete","back","deleteBlog","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","settings","timestampsInSnapshots","commentsFailed","errmess","payload","addComments","blogsFailed","addBlogs","Main","fetchBlogs","fetchComments","TransitionGroup","CSSTransition","classNames","timeout","path","component","match","filter","params","exact","withRouter","connect","dispatch","currentUser","newComment","now","collection","add","docRef","doc","get","exists","data","addComment","catch","error","message","alert","newBlog","addBlog","update","delete","snapshot","forEach","push","actions","reset","feedback","response","creds","requestLogin","signInWithEmailAndPassword","user","localStorage","setItem","token","signOut","removeItem","Comments","action","concat","Blogs","Auth","InitialFeedback","firstname","lastname","mobnum","email","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","basename","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5880fe87.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, \n    Button } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\nclass Header extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isNavOpen: false,\n        };\n        this.toggleNav = this.toggleNav.bind(this);\n        this.handleLogout = this.handleLogout.bind(this);\n    }\n\n    toggleNav() {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    handleLogout() {\n        this.props.logoutUser();\n    }\n\n    render() {\n        return(\n            <div>\n                <Navbar dark expand=\"md\">\n                    <div className=\"container\">\n                        <NavbarBrand className=\"mr-auto\" href=\"/blog\">\n                            <img src={process.env.PUBLIC_URL + '/assets/bg.jpg'} height=\"120\" width=\"140\"\n                                alt=\"Bhubhanshu Gurjar\" />\n                        </NavbarBrand>\n                        <NavbarToggler onClick={this.toggleNav} />\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar className=\"ml-auto\">\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to='/home'>Home</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to='/aboutme'>About Me</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to='/contactme'>Contact Me</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    { this.props.auth.isAuthenticated ? <Button outline onClick={this.handleLogout}>\n                                            <span className=\"fa fa-sign-out fa-lg\"></span> Logout\n                                            {this.props.auth.isFetching ?\n                                                <span className=\"fa fa-spinner fa-pulse fa-fw\"></span>\n                                                : null\n                                            }\n                                        </Button> : null}\n                                </NavItem>\n                            </Nav>\n                        </Collapse>\n                    </div>\n                </Navbar>\n            </div>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Footer(props) {\n    return(\n        <div className=\"footer mt-5\">\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">             \n                    <div className=\"col-5 col-sm-3\">\n                        <h5>Links</h5>\n                        <ul className=\"list-unstyled\">\n                            <li><Link to='/home'>Home</Link></li>\n                            <li><Link to='/aboutme'>About Me</Link></li>\n                            <li><Link to='/contactme'>Contact Me</Link></li>\n                        </ul>\n                    </div>\n                    <div className=\"col-7 col-sm-5\">\n                        <h5>Contact</h5>\n                        <ul className=\"list-unstyled\">\n                            <li><a className=\"fa fa-phone\" href=\"tel:9131040692\">  9131040692</a></li>\n                            <li><a className=\"fa fa-envelope\" href=\"mailto:f20170951@goa.bits-pilani.ac.in\">  f20170951@goa.bits-pilani.ac.in</a></li>\n                        </ul>\n                    </div>\n                    <div className=\"col-12 col-sm-4\">\n                        <div className=\"text-center\">\n                            <h5>Socials</h5>\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"https://www.facebook.com/bhubhanshu.gurjar\"><i className=\"fa fa-facebook\"></i></a> &nbsp;\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"https://www.linkedin.com/in/bhubhanshu/\"><i className=\"fa fa-linkedin\"></i></a> &nbsp;\n                            <a className=\"btn btn-social-icon btn-github\" href=\"https://www.github.com/bhubhanshu/\"><i className=\"fa fa-github\"></i></a> &nbsp;\n                        </div>\n                    </div>\n                </div>\n                <hr></hr>\n                <div className=\"row justify-content-center\">             \n                    <div className=\"col-auto\">\n                        <h5>© Copyright 2020 Bhubhanshu Gurjar</h5>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">             \n                    <div className=\"col-auto\">\n                        <h5>Built using ReactJS</h5>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem, Card, CardHeader, CardBody, Progress } from 'reactstrap';\n\n\nfunction About() {\n    return(\n        <div className=\"container mb-5\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Me</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Me</h3>\n                    <hr />\n                    <p>Currently pursuing B.E. Computer Science, I am a 3rd year student at BITS Pilani, KK Birla Goa Campus\n                        . <br></br>My Home Town is Bhopal, Madhya Pradesh.<br></br>\n                        An average-skilled Competitive Programmer, I have started to gain interest in Web Developement.<br></br>\n                        Keen interest in listening to instrumental music, also looking forward to produce some in future.<br></br>\n                        To know more about me, visit my personal portfolio website <a href=\"https://bhubhanshu.github.io/\">here</a>.\n                    </p>\n                </div>\n            </div>\n            <hr />\n            <div className=\"row\">\n                <Card>\n                    <CardHeader className=\"bg-success text-white\">Skills</CardHeader>\n                    <CardBody>\n                        <dl className=\"row p-1\">\n                            <dt className=\"col-4 my-2\">Web Development</dt>\n                            <dd className=\"col-8 my-2\"><Progress animated color=\"success\" value=\"70\" /></dd>\n                            <dt className=\"col-4 my-2\">Competitive Coding</dt>\n                            <dd className=\"col-8 my-2\"><Progress animated color=\"danger\" value=\"50\" /></dd>\n                            <dt className=\"col-4 my-2\">Machine Learning</dt>\n                            <dd className=\"col-8 my-2\"><Progress animated color=\"warning\" value=\"10\" /></dd>\n                        </dl>\n                    </CardBody>\n                </Card>\n            </div>\n            <hr />\n            <div className=\"row\">\n                <Card>\n                    <CardHeader className=\"bg-info text-white\">Languages</CardHeader>\n                    <CardBody>\n                        <dl className=\"row p-1\">\n                            <dt className=\"col-4 my-2\">C++</dt>\n                            <dd className=\"col-8 my-2\"><Progress animated color=\"success\" value=\"80\" /></dd>\n                            <dt className=\"col-4 my-2\">Python3</dt>\n                            <dd className=\"col-8 my-2\"><Progress animated color=\"danger\" value=\"50\" /></dd>\n                            <dt className=\"col-4 my-2\">PhP</dt>\n                            <dd className=\"col-8 my-2\"><Progress animated color=\"primary\" value=\"50\" /></dd>\n                            <dt className=\"col-4 my-2\">JS</dt>\n                            <dd className=\"col-8 my-2\"><Progress animated color=\"info\" value=\"70\" /></dd>\n                            <dt className=\"col-4 my-2\">HTML, CSS</dt>\n                            <dd className=\"col-8 my-2\"><Progress animated color=\"warning\" value=\"90\" /></dd>\n                            <dt className=\"col-4 my-2\">SQL, NoSQL</dt>\n                            <dd className=\"col-8 my-2\"><Progress animated color=\"dark\" value=\"80\" /></dd>\n                        </dl>\n                    </CardBody>\n                </Card>\n            </div>\n        </div>\n    );\n}\nexport default About;    ","import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, Form, Errors } from 'react-redux-form';\n\nconst required = (val) => val && val.length;\nconst isNumber = (val) => !isNaN(Number(val)) && val.length===10;\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values) {\n        console.log(\"Current State is: \" + JSON.stringify(values));\n        this.props.postFeedback(values);\n        this.props.resetFeedbackForm();\n    }\n\n    render() {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Contact Me</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Contact Me</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                    <h3>Contact Information</h3>\n                    </div>\n                    <div className=\"col-12 \">\n                        <i className=\"fa fa-phone\"></i> : +91 9131040692<br />\n                        <i className=\"fa fa-envelope\"></i> : f20170951@goa.bits-pilani.ac.in\n                    </div>\n                    <div className=\"col-12\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:9131040692\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\" href=\"https://wa.me/919131040692\"><i className=\"fa fa-whatsapp\"></i> Whatsapp</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:f20170951@goa.bits-pilani.ac.in\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                            <a role=\"button\" className=\"btn btn-danger\" href=\"https://m.me/bhubhanshu.gurjar\"><i className=\"fab fa-facebook-messenger\"></i> Facebook Messenger</a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12 mb-3\">\n                        <h3>Contact via Form</h3>\n                    </div>\n                    <div className=\"col-12 col-md-9\">\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"mobnum\" md={2}>Mobile No.</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".mobnum\" id=\"mobnum\" name=\"mobnum\"\n                                        placeholder=\"Mobile Number\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            isNumber\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".mobnum\"\n                                        show=\"touched\"\n                                        messages={{\n                                            isNumber: 'Invalid number'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            validEmail\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        messages={{\n                                            validEmail: 'Invalid Email Address'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"message\" md={2}>Message</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                                        rows=\"12\"\n                                        className=\"form-control\" />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size:10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                    Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default Contact;","import React, { Component } from 'react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { Redirect } from 'react-router-dom'; \n\nclass Admin extends Component {\n\n    constructor(props) {\n        super(props);\n        this.handleLogin = this.handleLogin.bind(this);\n        this.handleLogout = this.handleLogout.bind(this);\n    }\n\n    handleLogin(event) {\n        this.props.loginUser({username: this.username.value, password: this.password.value});\n        event.preventDefault();\n    }\n    handleLogout() {\n        this.props.logoutUser();\n    }\n\n    render() {\n        if(this.props.auth.isAuthenticated){\n            return(<Redirect to='/home' />);\n        }\n        return(\n            <div className=\"container my-5\">\n                { this.props.auth.errMess ? <div className=\"row justify-content-center text-danger\">\n                        Invalid Username or Password\n                    </div> : null}\n                <div className=\"row py-5 justify-content-center\">\n                    <Form onSubmit={this.handleLogin}>\n                        <FormGroup>\n                            <Label htmlFor=\"username\">Username</Label>\n                            <Input type=\"text\" id=\"username\" name=\"username\"\n                                innerRef={(input) => this.username = input} />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label htmlFor=\"password\">Password</Label>\n                            <Input type=\"password\" id=\"password\" name=\"password\"\n                                innerRef={(input) => this.password = input}  />\n                        </FormGroup>\n                        <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n                    </Form>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default Admin;","import Loader from 'react-loader-spinner'\nimport React from 'react';\n\nexport const Loading = () => {\n    return(\n        <div className=\"col-12\">\n            <div className=\"row  justify-content-center\">\n                <Loader type=\"Bars\" color=\"#00BFFF\" height={80} width={80} />\n            </div>\n            <div className=\"row  justify-content-center\">\n                <p>Loading</p>\n            </div>\n        </div>\n    );\n};","import React, { Component } from 'react';\nimport { Label, Modal, ModalHeader, ModalBody, Button, Row, Col } from 'reactstrap';\nimport { Control, LocalForm } from 'react-redux-form';\nimport { Fade, Stagger } from 'react-animation-components';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent'\n\nclass RenderBlog extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isMouseInside: false\n        }\n    }\n    mouseEnter = () => {\n        this.setState({ isMouseInside: true });\n    }\n    mouseLeave = () => {\n    this.setState({ isMouseInside: false });\n    }\n    render(){\n        return (\n            <div>\n                <div className=\"line\"></div>\n                <Link to={`/blog/${this.props.blog._id}`} >\n                    <div className=\"container\" id=\"box\" onMouseEnter={this.mouseEnter} onMouseLeave={this.mouseLeave}>\n                        {this.state.isMouseInside ? <div id=\"button\">\n                            <i className=\"fa fa-arrow-right\"></i>\n                        </div> : null}\n                        <div className=\"row mx-4 my-2\" id=\"inbox1\">\n                            <blockquote className=\"blockquote\">\n                                <h1>{this.props.blog.title}</h1>\n                                <footer className=\"blockquote-footer\">{this.props.blog.author},\n                                <cite title=\"Source Title\">{new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day:'2-digit'}).format(new Date(this.props.blog.createdAt))}</cite>\n                                </footer>\n                            </blockquote>\n                        </div>\n                        <div className=\"row mx-4 mb-5 pb-5\" id=\"inbox2\">\n                            {this.props.blog.content}\n                        </div>\n                    </div>\n                </Link>\n            </div>\n        );\n    }\n}\n\nclass BlogForm extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        \n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false\n        };\n    }\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleSubmit(values) {\n        this.toggleModal();\n        this.props.postBlog(values.title, values.author, values.content)\n        .then(() => window.location.reload(false))\n    }\n\n    render() {\n\n        return(\n        <div>\n            <Button outline onClick={this.toggleModal}> Post A Blog</Button>\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                <ModalHeader toggle={this.toggleModal} className=\"bg-success\">Blog Details</ModalHeader>\n                <ModalBody>\n                    <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"author\" md={2}>Author</Label>\n                            <Col md={10}>\n                                <Control.text model=\".author\" id=\"author\" name=\"author\"\n                                    placeholder=\"Author\"\n                                    className=\"form-control\"\n                                />\n                            </Col>\n                        </Row>\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"title\" md={2}>Title</Label>\n                            <Col md={10}>\n                                <Control.text model=\".title\" id=\"title\" name=\"title\"\n                                    placeholder=\"Title\"\n                                    className=\"form-control\"\n                                />\n                            </Col>\n                        </Row>\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"content\" md={2}>Content</Label>\n                            <Col md={10}>\n                            <Control.textarea model=\".content\" id=\"content\"\n                                        rows=\"10\" className=\"form-control\" />\n                            </Col>\n                        </Row>\n                        <Col md={{offset: \"2\"}}>\n                            <Button type=\"submit\" className=\"bg-primary\">\n                                Submit\n                            </Button>\n                        </Col>\n                    </LocalForm>\n                </ModalBody>\n            </Modal>\n        </div>\n        );\n    }\n\n}\n\nclass BlogList extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            showScroll: false\n        };\n    }\n    \n    render() {\n        const scrollTop = () =>{\n            window.scrollTo({top: 0, behavior: 'smooth'});\n        };\n        const checkScrollTop = () => {\n            if (!this.state.showScroll && window.pageYOffset > 400){\n              this.setState({\n                  showScroll: true\n              });\n            } else if (this.state.showScroll && window.pageYOffset <= 400){\n                this.setState({\n                    showScroll: false\n                });\n            }\n          };\n        window.addEventListener('scroll', checkScrollTop);\n          \n        const sorted = this.props.blogs.blogs.slice().sort((a, b) => b.createdAt - a.createdAt).reverse();\n        console.log(sorted);\n        const blogs = sorted.map((blog) => {\n            return (\n                <Fade in key={blog._id}>\n                    <div className=\"col-12 mt-2\">\n                            <RenderBlog blog={blog} />\n                    </div>\n                </Fade>\n            );\n        });\n\n        if (this.props.blogs.isLoading) {\n            return(\n                <Loading />\n            );\n        }\n        else if (this.props.blogs.errMess) {\n            return(\n                <div className=\"col-12\"> \n                    <h4>{this.props.blogs.errMess}</h4>\n                </div>\n            );\n        }\n        else {\n            return (\n                <div className=\"container\">\n                    <div className=\"row my-4\">\n                        <div className=\"col-7\">\n                            <h1>Recent Blogs</h1>\n                        </div>\n                        <div className=\"col-5\">\n                            { this.props.auth.isAuthenticated ?\n                            <BlogForm postBlog={this.props.postBlog} /> : null}\n                        </div>\n                    </div>\n                    <Stagger in>\n                        {blogs}\n                    </Stagger>\n                    <i className=\"fa fa-arrow-up scrollTop\" onClick={scrollTop} style={{height: 40, display: this.state.showScroll ? 'flex' : 'none'}}></i>\n                </div>\n            );\n        }\n    }\n}\n\nexport default BlogList;","import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem, Label,\n    Modal, ModalHeader, ModalBody, Button, Row, Col } from 'reactstrap';\nimport { Link, Redirect } from 'react-router-dom';\nimport { Control, LocalForm } from 'react-redux-form';\nimport { Loading } from './LoadingComponent';\n\nimport {  Fade, Stagger } from 'react-animation-components';\n\nfunction RenderBlog({blog}) {\n        return(\n            <div>\n                <div className=\"mt-1 mb-5\">\n                    {blog.content}\n                </div>\n            </div>\n        );\n}\n\nfunction RenderComments({comments, postComment, blogId}) {\n    if (comments != null)\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h4>Comments</h4>\n                </div>\n                <div className=\"row my-4\">\n                    <ul className=\"list-unstyled\">\n                        <Stagger in>\n                            {comments.map((comment) => {\n                                return (\n                                    <Fade in key={comment._id}>\n                                        <blockquote className=\"blockquote\">\n                                            <p>{comment.comment}</p>\n                                            <footer className=\"blockquote-footer\">{comment.author},\n                                            <cite title=\"Source Title\">{new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day:'2-digit'}).format(new Date(comment.createdAt))}</cite>\n                                            </footer>\n                                        </blockquote>\n                                    </Fade>\n                                );\n                            })}\n                        </Stagger>\n                    </ul>\n                </div>\n                <div className=\"row my-4\">\n                <CommentForm blogId={blogId} postComment={postComment} />\n                </div>\n            </div>\n        );\n    else\n        return(\n            <div></div>\n        );\n}\nclass EditForm extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        \n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false\n        };\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleSubmit(values) {\n        this.toggleModal();\n        this.props.editBlog(this.props.blog._id, values.title, values.author, values.content);\n    }\n\n    render() {\n        return(\n        <div>\n            <Button outline onClick={this.toggleModal}><span className=\"fa fa-pencil fa-lg\"></span> Edit</Button>\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                <ModalHeader toggle={this.toggleModal} className=\"bg-success\">Blog Details</ModalHeader>\n                <ModalBody>\n                    <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"author\" md={2}>Author</Label>\n                            <Col md={10}>\n                                <Control.text model=\".author\" id=\"author\" name=\"author\"\n                                    placeholder=\"Author\"\n                                    className=\"form-control\"\n                                    defaultValue={this.props.blog.author}\n                                />\n                            </Col>\n                        </Row>\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"title\" md={2}>Title</Label>\n                            <Col md={10}>\n                                <Control.text model=\".title\" id=\"title\" name=\"title\"\n                                    placeholder=\"Title\"\n                                    className=\"form-control\"\n                                    defaultValue={this.props.blog.title}\n                                />\n                            </Col>\n                        </Row>\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"content\" md={2}>Content</Label>\n                            <Col md={10}>\n                            <Control.textarea model=\".content\" id=\"content\"\n                                        rows=\"10\" className=\"form-control\"\n                                        defaultValue={this.props.blog.content} />\n                            </Col>\n                        </Row>\n                        <Col md={{offset: \"2\"}}>\n                            <Button type=\"submit\" className=\"bg-primary\">\n                                Submit\n                            </Button>\n                        </Col>\n                    </LocalForm>\n                </ModalBody>\n            </Modal>\n        </div>\n        );\n    }\n\n}\nclass CommentForm extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        \n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false\n        };\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleSubmit(values) {\n        this.toggleModal();\n        this.props.postComment(this.props.blogId, values.name, values.comment);\n    }\n\n    render() {\n        return(\n        <div>\n            <Button outline onClick={this.toggleModal}> Submit Comment</Button>\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                <ModalHeader toggle={this.toggleModal} className=\"bg-info\">Submit Comment</ModalHeader>\n                <ModalBody>\n                    <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"name\" md={2}>Name</Label>\n                            <Col md={10}>\n                                <Control.text model=\".name\" id=\"name\" name=\"name\"\n                                    placeholder=\"Name\"\n                                    className=\"form-control\"\n                                />\n                            </Col>\n                        </Row>\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"comment\" md={2}>Comment</Label>\n                            <Col md={10}>\n                            <Control.textarea model=\".comment\" id=\"comment\"\n                                        rows=\"6\" className=\"form-control\" />\n                            </Col>\n                        </Row>\n                        <Col md={{offset: \"2\"}}>\n                            <Button type=\"submit\" className=\"bg-primary\">\n                                Submit\n                            </Button>\n                        </Col>\n                    </LocalForm>\n                </ModalBody>\n            </Modal>\n        </div>\n        );\n    }\n\n}\n\nclass BlogDetail extends Component {\n    constructor(props) {\n        super(props);\n        this.handleDelete = this.handleDelete.bind(this);\n        \n        this.state = {\n            back: false\n        };\n    }\n\n    handleDelete() {\n        this.props.deleteBlog(this.props.blog._id)\n        .then(() => this.setState({back: true}))\n        .then(() => window.location.reload(false))\n    }\n\n    render() {\n        if (this.props.isLoading) {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Loading />\n                    </div>\n                </div>\n            ); \n        }\n        else if (this.props.errMess) {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <h4>{this.props.errMess}</h4>\n                    </div>\n                </div>\n            );\n        }\n        else if (this.props.blog != null){\n            if(this.state.back){\n                return(<Redirect to={process.env.PUBLIC_URL+'/blog'} />);\n            }       \n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to='/'>Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>{this.props.blog.title}</BreadcrumbItem>\n                        </Breadcrumb>\n                        </div>\n                    <div className=\"row\">\n                        <div className=\"col-12 col-md-8\">\n                            <blockquote className=\"blockquote\">\n                                <h1>{this.props.blog.title}</h1>\n                                <footer className=\"blockquote-footer ml-5\">{this.props.blog.author},\n                                <cite title=\"Source Title\">{new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day:'2-digit'}).format(new Date(this.props.blog.createdAt))}</cite>\n                                </footer>\n                            </blockquote>\n                        </div>\n                        { this.props.auth.isAuthenticated ?\n                        <div className=\"col-6 col-md-2\">\n                            <Button outline onClick={this.handleDelete}><span className=\"fa fa-times fa-lg\"></span> Delete</Button>\n                        </div> : null}\n                        { this.props.auth.isAuthenticated ?\n                        <div className=\"col-6 col-md-2\">\n                            <EditForm editBlog={this.props.editBlog} blog={this.props.blog}/>\n                        </div> : null}\n                        \n                        <hr />\n                    </div>\n                    <div className=\"row\">\n                        <RenderBlog blog={this.props.blog} />\n                        <RenderComments comments={this.props.comments}\n                            postComment={this.props.postComment}\n                            blogId={this.props.blog._id} />\n                    </div>\n                </div>\n            );\n        }\n        else\n            return(\n                <div></div>\n            );\n    }\n}\n\nexport default BlogDetail;","import { config } from './config';\nimport firebase from 'firebase';\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\n\nexport const fireauth = firebase.auth;\n\nconst settings = {timestampsInSnapshots: true};\nfirebase.firestore().settings(settings);\nexport const firestore = firebase.firestore();\n\nexport const firebasestore = firebase.firestore;","export const config = {\n  apiKey: \"AIzaSyDMPGpsvsj3K_0umVfecMuuudsyItZBzqM\",\n  authDomain: \"bgsblog.firebaseapp.com\",\n  databaseURL: \"https://bgsblog.firebaseio.com\",\n  projectId: \"bgsblog\",\n  storageBucket: \"bgsblog.appspot.com\",\n  messagingSenderId: \"559953471247\",\n  appId: \"1:559953471247:web:61dd7619a1ca1ad39b807a\",\n  measurementId: \"G-6Y848GN6RR\"\n};\n","import * as ActionTypes from './ActionTypes';\nimport { auth, firestore, fireauth, firebasestore } from '../firebase/firebase';\n\nexport const addComment = (comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\n\nexport const postComment = (blogId, author, comment) => (dispatch) => {\n\n    if (!auth.currentUser) {\n        console.log('No user logged in!');\n        return;\n    }\n    const newComment = {\n        blog: blogId,\n        author: author,\n        comment: comment,\n        createdAt: Date.now()\n    }\n\n    return firestore.collection('comments').add(newComment)\n    .then(docRef => {\n        firestore.collection('comments').doc(docRef.id).get()\n            .then(doc => {\n                if (doc.exists) {\n                    const data = doc.data();\n                    const _id = doc.id;\n                    let comment = {_id, ...data};\n                    dispatch(addComment(comment))\n                } else {\n                    // doc.data() will be undefined in this case\n                    console.log(\"No such document!\");\n                }\n            });\n    })\n    .catch(error => { console.log('Post comments ', error.message);\n        alert('Your comment could not be posted\\nError: '+ error.message); })\n\n}\n\nexport const fetchComments = () => (dispatch) => {\n    return firestore.collection('comments').get()\n        .then(snapshot => {\n            let comments = [];\n            snapshot.forEach(doc => {\n                const data = doc.data()\n                const _id = doc.id\n                comments.push({_id, ...data });\n            });\n            return comments;\n        })\n        .then(comments => dispatch(addComments(comments)))\n        .catch(error => dispatch(commentsFailed(error.message)));\n}\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\nexport const addBlog = (blog) => ({\n    type: ActionTypes.ADD_BLOG,\n    payload: blog\n});\n\nexport const postBlog = (title, author, content) => (dispatch) => {\n\n    if (!auth.currentUser) {\n        console.log('No user logged in!');\n        return;\n    }\n\n    const newBlog = {\n        title: title,\n        author: author,\n        content: content,\n        createdAt: Date.now()\n    }\n    return firestore.collection('blogs').add(newBlog)\n    .then(docRef => {\n        firestore.collection('blogs').doc(docRef.id).get()\n            .then(doc => {\n                if (doc.exists) {\n                    const data = doc.data();\n                    const _id = doc.id;\n                    let blog = {_id, ...data};\n                    dispatch(addBlog(blog))\n                } else {\n                    // doc.data() will be undefined in this case\n                    console.log(\"No such document!\");\n                }\n            });\n    })\n    .catch(error => { console.log('Post blogs ', error.message);\n        alert('Your blog could not be posted\\nError: '+ error.message); })\n\n}\nexport const editBlog = (blogId, title, author, content) => (dispatch) => {\n\n    if (!auth.currentUser) {\n        console.log('No user logged in!');\n        return;\n    }\n\n    const newBlog = {\n        title: title,\n        author: author,\n        content: content\n    }\n    return firestore.collection('blogs').doc(blogId).update(newBlog)\n            .catch(error => { console.log('Edit blog ', error.message);\n            alert('Your blog could not be edited\\nError: '+ error.message); })\n}\n\nexport const deleteBlog = (blogId) => (dispatch) => {\n    if (!auth.currentUser) {\n        console.log('No user logged in!');\n        return;\n    }\n    return firestore.collection('blogs').doc(blogId).delete()\n            .catch(error => { console.log('Delete blog ', error.message);\n            alert('Your blog could not be deleted\\nError: '+ error.message); })\n}\n\nexport const fetchBlogs = () => (dispatch) => {\n    return firestore.collection('blogs').get()\n        .then(snapshot => {\n            let blogs = [];\n            snapshot.forEach(doc => {\n                const data = doc.data()\n                const _id = doc.id\n                blogs.push({_id, ...data });\n            });\n            return blogs;\n        })\n        .then(blogs => dispatch(addBlogs(blogs)))\n        .catch(error => dispatch(blogsFailed(error.message)));\n}\n\nexport const blogsFailed = (errmess) => ({\n    type: ActionTypes.BLOGS_FAILED,\n    payload: errmess\n});\n\nexport const addBlogs = (blogs) => ({\n    type: ActionTypes.ADD_BLOGS,\n    payload: blogs\n});\n\n\n\nexport const postFeedback = (feedback) => (dispatch) => {\n        \n    return firestore.collection('feedback').add(feedback)\n    .then(response => { console.log('Feedback', response); alert('Thank you for your feedback!'); })\n    .catch(error =>  { console.log('Feedback', error.message); alert('Your feedback could not be posted\\nError: '+error.message); });\n};\n\nexport const requestLogin = (creds) => {\n    return {\n        type: ActionTypes.LOGIN_REQUEST,\n        creds\n    }\n}\n  \nexport const receiveLogin = (response) => {\n    return {\n        type: ActionTypes.LOGIN_SUCCESS,\n        token: response.token\n    }\n}\n  \nexport const loginError = (message) => {\n    return {\n        type: ActionTypes.LOGIN_FAILURE,\n        message\n    }\n}\n\nexport const loginUser = (creds) => (dispatch) => {\n    // We dispatch requestLogin to kickoff the call to the API\n    dispatch(requestLogin(creds))\n\n    return auth.signInWithEmailAndPassword(creds.username, creds.password)\n    .then(() => {\n        var user = auth.currentUser;\n        localStorage.setItem('user', JSON.stringify(user));\n        // Dispatch the success action\n        dispatch(receiveLogin(user));\n    })\n    .catch(error => dispatch(loginError(error.message)))\n};\n\nexport const requestLogout = () => {\n    return {\n      type: ActionTypes.LOGOUT_REQUEST\n    }\n}\n  \nexport const receiveLogout = () => {\n    return {\n      type: ActionTypes.LOGOUT_SUCCESS\n    }\n}\n\n// Logs the user out\nexport const logoutUser = () => (dispatch) => {\n    dispatch(requestLogout())\n    auth.signOut().then(() => {\n        // Sign-out successful.\n      }).catch((error) => {\n        // An error happened.\n      });\n    localStorage.removeItem('user');\n    dispatch(receiveLogout())\n}\n","export const ADD_COMMENT = 'ADD_COMMENT';\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const LOGOUT_FAILURE = 'LOGOUT_FAILURE';\nexport const ADD_BLOG = 'ADD_BLOG';\nexport const ADD_BLOGS = 'ADD_BLOGS';\nexport const BLOGS_FAILED = 'BLOGS_FAILED';","import React, { Component } from 'react';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { actions } from 'react-redux-form';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport About from './AboutComponent';\nimport Contact from './ContactComponent';\nimport Admin from './AdminComponent';\nimport Home from './HomeComponent';\nimport Blog from './BlogComponent';\nimport { postComment, postFeedback, fetchBlogs, fetchComments, postBlog, loginUser, logoutUser, editBlog, deleteBlog } from '../redux/ActionCreators';\n\nconst mapStateToProps = state => {\n    return {\n      blogs: state.blogs,\n      comments: state.comments,\n      auth: state.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  postComment: (blogId, author, comment) => dispatch(postComment(blogId, author, comment)),\n  postBlog: (title, author, content) => dispatch(postBlog(title, author, content)),\n  editBlog: (blogId, title, author, content) => dispatch(editBlog(blogId, title, author, content)),\n  deleteBlog: (blogId) => dispatch(deleteBlog(blogId)),\n  fetchBlogs: () => {dispatch(fetchBlogs())},\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\n  fetchComments: () => {dispatch(fetchComments())},\n  postFeedback: (feedback) => dispatch(postFeedback(feedback)),\n  loginUser: (creds) => dispatch(loginUser(creds)),\n  logoutUser: () => dispatch(logoutUser()),\n});\nclass Main extends Component {\n    componentDidMount() {\n        this.props.fetchBlogs();\n        this.props.fetchComments();\n    }\n    render() {\n\n        const BlogWithId = ({match}) => {\n            return(\n                <Blog \n                auth={this.props.auth}\n                blog={this.props.blogs.blogs.filter((blog) => blog._id === match.params.blogId)[0]}\n                postComment={this.props.postComment}\n                editBlog={this.props.editBlog}\n                deleteBlog={this.props.deleteBlog}\n                isLoading={this.props.blogs.isLoading}\n                errMess={this.props.blogs.errMess}\n                comments={this.props.comments.comments.filter((comment) => comment.blog === match.params.blogId)}/>\n            );\n          }\n\n        return(\n            <div>\n                <Header auth={this.props.auth} logoutUser={this.props.logoutUser}/> \n                <TransitionGroup>\n                    <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\n                        <Switch>\n                            <Route path='/home' component={() => <Home blogs={this.props.blogs} auth={this.props.auth} postBlog={this.props.postBlog}/>} />\n                            <Route path='/blog/:blogId' component={BlogWithId} />\n                            <Route exact path='/aboutme' component={() => <About />} />\n                            <Route exact path='/admin' component={() => <Admin auth={this.props.auth} loginUser={this.props.loginUser}/> } />\n                            <Route exact path='/contactme' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback}/>} />\n                            <Redirect to='/home' />\n                        </Switch>\n                    </CSSTransition>\n                </TransitionGroup>\n                <Footer />\n            </div>\n        );\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\n","import * as ActionTypes from './ActionTypes';\n\nexport const Comments = (state = {\n        errMess: null,\n        comments: [],\n        isLoading: true\n    }, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_COMMENTS:\n            return {...state, isLoading: false, errMess: null, comments: action.payload};\n\n        case ActionTypes.COMMENTS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, comments: []};\n\n        case ActionTypes.ADD_COMMENT:\n            var comment = action.payload;\n            return {...state, comments: state.comments.concat(comment)};\n\n        default:\n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const Blogs = (state = {\n        errMess: null,\n        blogs: [],\n        isLoading: true\n    }, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_BLOGS:\n            return {...state, isLoading: false, errMess: null, blogs: action.payload};\n\n        case ActionTypes.BLOGS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, blogs: []};\n\n        case ActionTypes.ADD_BLOG:\n            var blog = action.payload;\n            return {...state, comments: state.blogs.concat(blog)};\n\n        default:\n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\n// The auth reducer. The starting state sets authentication\n// based on a token being in local storage. In a real app,\n// we would also want a util to check if the token is expired.\nexport const Auth = (state = {\n        isLoading: false,\n        isAuthenticated: false,\n        user: null,\n        errMess: null\n    }, action) => {\n    switch (action.type) {\n        case ActionTypes.LOGIN_REQUEST:\n            return {...state,\n                isLoading: true,\n                isAuthenticated: false,\n            };\n        case ActionTypes.LOGIN_SUCCESS:\n            return {...state,\n                isLoading: false,\n                isAuthenticated: true,\n                errMess: '',\n                user: action.user\n            };\n        case ActionTypes.LOGIN_FAILURE:\n            return {...state,\n                isLoading: false,\n                isAuthenticated: false,\n                errMess: action.message\n            };\n        case ActionTypes.LOGOUT_REQUEST:\n            return {...state,\n                isLoading: true,\n                isAuthenticated: true\n            };\n        case ActionTypes.LOGOUT_SUCCESS:\n            return {...state,\n                isLoading: false,\n                isAuthenticated: false,\n                token: '',\n                user: null\n            };\n        default:\n            return state\n    }\n}","export const InitialFeedback = {\n    firstname: '',\n    lastname: '',\n    mobnum: '',\n    email: '',\n    message: ''\n}","import React from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n        <HashRouter basename={process.env.PUBLIC_URL}>\n          <div>\n            <Main />\n          </div>\n        </HashRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createForms } from 'react-redux-form';\nimport { Comments } from './comments';\nimport { Blogs } from './blogs';\nimport { Auth } from './auth';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { InitialFeedback } from './forms';\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            comments: Comments,\n            blogs: Blogs,\n            auth: Auth,\n            ...createForms({\n                feedback: InitialFeedback\n            })\n        }),\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}